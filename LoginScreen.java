package assetmanagementsystem;

import javax.swing.*;
import java.awt.event.*;
import java.sql.*;

public class LoginScreen extends javax.swing.JFrame {

    // Database connection
    private static void connectToDatabase() {
        try {
            Connection connection = DatabaseConnection.getConnection();
            Statement stmt = connection.createStatement();
            stmt.executeUpdate("CREATE TABLE IF NOT EXISTS users (" +
                    "id INTEGER PRIMARY KEY AUTOINCREMENT, " +
                    "username TEXT NOT NULL UNIQUE, " +
                    "password TEXT NOT NULL)");
            
            stmt.executeUpdate("CREATE TABLE IF NOT EXISTS categories (" +
                    "id INTEGER PRIMARY KEY AUTOINCREMENT, " +
                    "name TEXT NOT NULL UNIQUE)");

            // Create assets table
            stmt.executeUpdate("CREATE TABLE IF NOT EXISTS assets (" +
        "id INTEGER PRIMARY KEY AUTOINCREMENT, " +
        "name TEXT NOT NULL, " +
        "category_id INTEGER NOT NULL, " +
        "status_id INTEGER NOT NULL, " +
        "department_id INTEGER NOT NULL, " +
        "FOREIGN KEY (category_id) REFERENCES categories(id), " +
        "FOREIGN KEY (status_id) REFERENCES statuses(id), " +
        "FOREIGN KEY (department_id) REFERENCES departments(id))");
            
            stmt.executeUpdate("CREATE TABLE IF NOT EXISTS departments (" +
                    "id INTEGER PRIMARY KEY AUTOINCREMENT, " +
                    "department_name TEXT NOT NULL UNIQUE)");
            
            stmt.executeUpdate("CREATE TABLE IF NOT EXISTS statuses (" +
                    "id INTEGER PRIMARY KEY AUTOINCREMENT, " +
                    "status_name TEXT NOT NULL UNIQUE)");
            
            stmt.executeUpdate("CREATE TABLE IF NOT EXISTS users (" +
                        "id INTEGER PRIMARY KEY AUTOINCREMENT, " +
                        "username TEXT NOT NULL, " +
                        "password TEXT NOT NULL)");

            // Insert default admin user if not present
            stmt.executeUpdate("INSERT OR IGNORE INTO users (username, password) VALUES ('admin', 'admin')");
            stmt.executeUpdate("INSERT OR IGNORE INTO statuses (status_name) VALUES ('Ok')");
            stmt.executeUpdate("INSERT OR IGNORE INTO statuses (status_name) VALUES ('Damaged')");
            stmt.executeUpdate("INSERT OR IGNORE INTO statuses (status_name) VALUES ('Maintenance')");
            stmt.executeUpdate("INSERT OR IGNORE INTO statuses (status_name) VALUES ('Disposed')");
            stmt.executeUpdate("INSERT OR IGNORE INTO departments (department_name) VALUES ('No Departmet')");
            stmt.executeUpdate("INSERT OR IGNORE INTO categories (name) VALUES ('Not Categorized')");
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Database connection error: " + e.getMessage());
            System.exit(1);
        }
    }

    // User authentication
    private static boolean authenticateUser(String username, String password) {
        try {
            Connection connection = DatabaseConnection.getConnection();
            PreparedStatement pstmt = connection.prepareStatement(
                    "SELECT * FROM users WHERE username = ? AND password = ?");
            pstmt.setString(1, username);
            pstmt.setString(2, password);
            ResultSet rs = pstmt.executeQuery();
            return rs.next();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Authentication error: " + e.getMessage());
            return false;
        }
    }

    public LoginScreen() {
        initComponents();
    }

    // This method is generated by the NetBeans GUI Editor
    private void initComponents() {

        // Define components
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        usernameField = new javax.swing.JTextField();
        passwordField = new javax.swing.JPasswordField();
        loginButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Login");

        // Set up components
        jLabel1.setText("Username:");
        jLabel2.setText("Password:");

        loginButton.setText("Login");
        loginButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginButtonActionPerformed(evt);
            }
        });

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        // Layout
        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(usernameField, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(loginButton)
                        .addGap(18, 18, 18)
                        .addComponent(cancelButton)))
                .addContainerGap(30, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(usernameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(loginButton)
                    .addComponent(cancelButton))
                .addContainerGap(30, Short.MAX_VALUE))
        );

        pack();
    }

    // Login button action
    private void loginButtonActionPerformed(java.awt.event.ActionEvent evt) {
        String username = usernameField.getText();
        String password = new String(passwordField.getPassword());
        if (authenticateUser(username, password)) {
            JOptionPane.showMessageDialog(this, "Login successful!");
            this.dispose(); // Close the login screen
            MainScreen.showMainScreen(username); // Open the main screen
        } else {
            JOptionPane.showMessageDialog(this, "Invalid credentials. Try again.");
        }
    }

    // Cancel button action
    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {
        System.exit(0);  // Close the application
    }

    // Main method to show login screen
    public static void main(String args[]) {
        // Initialize database and start login screen
        connectToDatabase();
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LoginScreen().setVisible(true);
            }
        });
    }

    // Variable declarations
    private javax.swing.JButton cancelButton;
    private javax.swing.JButton loginButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPasswordField passwordField;
    private javax.swing.JTextField usernameField;
}
